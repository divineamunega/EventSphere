{
  "openapi": "3.0.0",
  "info": {
    "title": "EventSphere API",
    "version": "1.0.0",
    "description": "API for managing events and users."
  },
  "paths": {
    "/api/v1/auth/signup": {
      "post": {
        "summary": "User Signup",
        "description": "Registers a new user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Signup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signup successful"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "summary": "User Login",
        "description": "Authenticates a user and returns a session token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/v1/events": {
      "get": {
        "summary": "Get Approved Events",
        "description": "Retrieves a paginated list of approved events.",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of events per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Events retrieved successfully"
          }
        }
      }
    },
    "/api/v1/events/all": {
      "get": {
        "summary": "Get All Events (Admin/Organizer)",
        "description": "Retrieves a paginated list of all events. Admins see all events, Organizers see their own.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination."
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of events per page."
          }
        ],
        "responses": {
          "200": {
            "description": "Events retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/events/create": {
      "post": {
        "summary": "Create Event",
        "description": "Creates a new event. Requires ORGANIZER or ADMIN role.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEvent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/events/{id}": {
      "patch": {
        "summary": "Edit Event",
        "description": "Edits an event. Requires ORGANIZER or ADMIN role.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/events/{id}/approve": {
      "patch": {
        "summary": "Approve Event",
        "description": "Approves an event. Requires ADMIN role.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event approved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/events/{id}/reject": {
      "patch": {
        "summary": "Reject Event",
        "description": "Rejects an event. Requires ADMIN role.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event rejected successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid"
      }
    },
    "schemas": {
      "Signup": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 8
          },
          "fullName": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "minLength": 3,
            "maxLength": 20
          },
          "contactNumber": {
            "type": "string",
            "pattern": "^\\d{11}$"
          }
        },
        "required": [
          "email",
          "password",
          "fullName",
          "username",
          "contactNumber"
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateEvent": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string",
            "minLength": 10
          },
          "category": {
            "type": "string",
            "minLength": 3
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "venue": {
            "type": "string",
            "minLength": 3
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "mainImage": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "title",
          "description",
          "date",
          "venue",
          "capacity"
        ]
      },
      "EditEvent": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 3
          },
          "description": {
            "type": "string",
            "minLength": 10
          },
          "category": {
            "type": "string",
            "minLength": 3
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "venue": {
            "type": "string",
            "minLength": 3
          },
          "capacity": {
            "type": "integer",
            "format": "int32"
          },
          "location": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "mainImage": {
            "type": "string",
            "format": "uri"
          }
        }
      }
    }
  }
}